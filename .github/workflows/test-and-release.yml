# This is a composition of lint and test scripts
# Make sure to update this file along with the others

name: Test and Release

# Run this job on all pushes and pull requests
# as well as tags with a semantic version
on:
  push:
    branches:
      - '*'
    tags:
      # normal versions
      - "v?[0-9]+.[0-9]+.[0-9]+"
      # pre-releases
      - "v?[0-9]+.[0-9]+.[0-9]+-**"
  pull_request: {}

# Cancel previous PR/branch runs when a new commit is pushed
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Performs quick checks before the expensive test runs
  check-and-lint:
    if: contains(github.event.head_commit.message, '[skip ci]') == false

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm ci

  #      - name: Run local tests
  #        run: npm test

  # Deploys the final package to NPM
  deploy:
    needs: [check-and-lint]

    # Trigger this step only when a commit on master is tagged with a version number
    if: |
      contains(github.event.head_commit.message, '[skip ci]') == false &&
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Extract the version and commit body from the tag
        shell: bash
        id: extract_release
        # The body may be multiline, therefore newlines and % need to be escaped
        run: |
          VERSION="${{ github.ref }}"
          VERSION=${VERSION##*/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          EOF=$(od -An -N6 -x /dev/urandom | tr -d ' ')
          BODY=$(git show -s --format=%b)
          echo "BODY<<$EOF" >> $GITHUB_OUTPUT
          echo "$BODY" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT
          if [[ $VERSION == *"-"* ]] ; then
            echo "TAG=--tag next" >> $GITHUB_OUTPUT
          fi

      - name: Install Dependencies
        run: npm ci

      #      - name: Create a clean build
      #        run: npm run build
      - name: Publish package to npm
        run: |
          npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
          npm whoami
          npm publish ${{ steps.extract_release.outputs.TAG }}

      - name: Create Github Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: Release v${{ steps.extract_release.outputs.VERSION }}
          draft: false
          # Prerelease versions create prereleases on Github
          prerelease: ${{ contains(steps.extract_release.outputs.VERSION, '-') }}
          body: ${{ steps.extract_release.outputs.BODY }}
